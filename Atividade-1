tarefas = []            # Lista principal de tarefas
historico = []          # Pilha para desfazer tarefas
fila_execucao = []      # Fila para executar tarefas

def adicionar_tarefa(tarefa): # adicionar_tarefa √© a fun√ß√£o respons√°vel por adicionas as tarefas.
    prioridade = input("Digite a prioridade (alta, m√©dia, baixa) ou deixe em branco: ").strip().lower() # solicita a prioridade da tarefa ao usu√°rio
    tarefa_com_prioridade = f"{tarefa} [prioridade: {prioridade}]" if prioridade else tarefa # adiciona a prioridade ao texto da tarefa, se fornecida
    tarefas.append(tarefa_com_prioridade)    # o m√©todo append √© chamado na lista "tarefas" para adiocionar uma tarefa.
    historico.append(tarefa_com_prioridade)  # o m√©todo append √© chamado na lista "historico" para adiocionar uma tarefa.
    fila_execucao.append(tarefa_com_prioridade) # o m√©todo append √© chamado na lista "fila_execucao" para adiocionar uma tarefa.
    print(f"Tarefa '{tarefa_com_prioridade}' adicionada!\n") # Ao adicionar a tarefa na lista o print mostra a tarefa adicionado.

def desfazer_ultima_tarefa():  # A fun√ß√£o desfazer_ultima_tarefa √© usada para desfazer a √∫ltima tarefa.
    if historico:  # a estrutura condicional verifica se a pilha tem alguma tarefa e executa o bloco de comando a seguir se uma condi√ß√£o for atendida.
        ultima = historico.pop() # o m√©todo pega o ultimo item da lista "historico" e atribui a vari√°vel "ultima".
        tarefas.remove(ultima)  #  o m√©todo remove est√° removendo o item ultima da lista "tarefas"
        fila_execucao.remove(ultima)  #  o m√©todo remove est√° removendo o item ultima da lista "fila_execucao"
        print(f"Tarefa '{ultima}' desfeita!\n")  #  o comando print mostra a ultima tarefa desfeita.
    else: # estrutura condicional que diz que se nenhuma das condi√ß√µes anteriores for verdadeira, ent√£o execute esta parte do c√≥digo a seguir.
        print("Nenhuma tarefa para desfazer.\n") # o comando print mostra que n√£o tem tarefas adicionadas, logo n√£o tem para remover.

def atender_tarefa(): # a fun√ß√£o "atender_tarefa" serve para mudar a tarefa para atendida.
    if fila_execucao: # estrutura condicional que verifica a exist√™ncia de tarefas na fila e executa o bloco de comando a seguir se uma condi√ß√£o for atendida.
        feita = fila_execucao.pop(0) # o m√©todo pop obtem o item da posi√ß√£o para atribuir na vari√°vel "feita".
        tarefas.remove(feita) # o m√©todo remove, remove a variavel atribuida em "feita"
        print(f"Tarefa '{feita}' atendida!\n") # o print mostra que a tarefa foi atendida.
    else: # estrutura condicional que diz que se nenhuma das condi√ß√µes anteriores for verdadeira, ent√£o execute esta parte do c√≥digo a seguir.
        print("Nenhuma tarefa para atender.\n") # O print mostra que n√£o tem tarefas a serem concluidas.

def mostrar_tarefas():# a fun√ß√£o mostrar_tarefas serve para mostrar todas as tarefas
    print("\nüìã Lista de Tarefas:") # O print apenas mostra a mensagem üìã Lista de Tarefas:.
    for i, t in enumerate(tarefas): # estrutura condicional que percorre as tarefas com √≠ndice e valor.
        print(f"{i + 1}. {t}") # o print mostra cada tarefa a partir da numera√ß√£o "1".
    print()  # o print mostra uma linha em branco para espa√ßamento.

while True: # estrutura de repeti√ß√£o principal do menu interativo.
    print("1. Adicionar Tarefa")  # o print exibe a op√ß√£o "Adicionar Tarefa" no menu interativo.
    print("2. Desfazer √öltima Tarefa") # o print exibe a op√ß√£o "Desfazer √öltima Tarefa" no menu interativo. 
    print("3. Atender Tarefa (modo fila)") # o print exibe a op√ß√£o "Atender Tarefa" no menu interativo.
    print("4. Mostrar Tarefas") # o print exibe a op√ß√£o "Mostrar Tarefas" no menu interativo.
    print("5. Sair") # o print exibe a op√ß√£o "Sair" no menu interativo.

    opcao = input("Escolha uma op√ß√£o: ") # l√™ a op√ß√£o que o usu√°rio escolher.

    if opcao == '1': # estrutura de condi√ß√£o que diz que se a op√ß√£o for 1 execute o bloco abaixo.
        tarefa = input("Digite a tarefa: ") # l√™ a descri√ß√£o da tarefa que o usu√°rio digita.
        adicionar_tarefa(tarefa) # chama a vari√°vel " adicionar_tarefa" para adicionar uma tarefa.
    elif opcao == '2': # estrutura de condi√ß√£o que diz que se a op√ß√£o for 2 execute o bloco abaixo.
        desfazer_ultima_tarefa() #  vari√°vel chamada para desfazer a ultima tarefa
    elif opcao == '3': # estrutura de condi√ß√£o que diz que se a op√ß√£o for 3 execute o bloco abaixo.
        atender_tarefa() # vari√°vel chamada para atender a ultima tarefa
    elif opcao == '4': # estrutura de condi√ß√£o que diz que se a op√ß√£o for 4 execute o bloco abaixo.
        mostrar_tarefas() # vari√°vel chamada para mostrar as tarefas.
    elif opcao == '5': # estrutura de condi√ß√£o que diz que se a op√ß√£o for 5 execute o bloco abaixo.
        print("Saindo do programa...") # sair do programa
        break # encerra o loop e termina o programa
    else: # Se o usu√°rio digitar uma op√ß√£o inv√°lida execute o bloco abaixo.
        print("Op√ß√£o inv√°lida!\n") # mostra que a op√ß√£o digitada pelo usu√°rio √© inv√°lida.
